% compara/3
compara(fecha(1970,1,1), '=', fecha(1970,1,1)).		-> true
compara(fecha(1970,1,2), '=', fecha(1970,1,1)).		-> false

compara(fecha(2000,12,21), '>', fecha(1970,1,1)).	-> true
compara(fecha(2020,11,9), '>', fecha(2020,11,10)).	-> false

compara(fecha(2020,11,9), '<', fecha(2020,11,10)).	-> true
compara(fecha(2000,12,21), '<', fecha(1970,1,1)).	-> false

compara(fecha(2020,11,10), '>=', fecha(2020,11,9)).	-> true
compara(fecha(2020,11,9), '>=', fecha(2020,11,9)).	-> true
compara(fecha(2020,11,9), '>=', fecha(2020,11,10)). -> false

compara(fecha(2020,11,4), '=<', fecha(2020,11,4)).	-> true
compara(fecha(2020,11,4), '=<', fecha(2020,11,5)).	-> true
compara(fecha(2020,11,4), '=<', fecha(2020,11,3)).	-> false
-----------------------------------------------------------------------------

% persona(N, Nom)
persona('heyyy', 'Federico').	-> false	
persona(1, 'Federico'). -> true
persona(-2, 'Juan').	-> false
-----------------------------------------------------------------------------

% contacto(N1,N2,F)
contacto(5,4,fecha(2020,11,2)).		-> true
contacto(12,15,fecha(2020,11,2)).	-> false 	% Debido a que los IDs 12 y 15 no estan registrados.
contacto(4,-2,fecha(2020,11,2)).	-> false
-----------------------------------------------------------------------------

% positivo(N,F)
positivo(10, fecha(2020,11,3)).		-> true
positivo(14, fecha(2020,11,3)).		-> false 	% Debido a que el ID 14 no esta registrado. 
positivo(-20, fecha(2020,11,3)).	-> false 	
-----------------------------------------------------------------------------

% negativo(N,F)
negativo(2, fecha(2020,11,3)).	-> true
negativo(17, fecha(2020,11,3)).	-> false		% Debido a que el ID 17 no esta registrado.
negativo(-2, fecha(2020,11,3)).	-> false		
-----------------------------------------------------------------------------	

% cantTestPositivo(F, C)
cantTestPositivo(fecha(2020,6,20),C).		-> C = 5
cantTestPositivo(fecha(2020,5,6),C).		-> C = 0
cantTestPositivo(fecha(2020,11,1),C).		-> C = 9
-----------------------------------------------------------------------------

% cantTestNegativo(F,C)
cantTestNegativo(fecha(2020,7,3),C).		-> C = 9
cantTestNegativo(fecha(2020,3,21),C).		-> C = 0
cantTestNegativo(fecha(2020,11,3),C).		-> C = 10
-----------------------------------------------------------------------------

% cantTestPersona(N,C)
cantTestPersona(2,C).			-> C = 3
cantTestPersona(5,C).			-> C = 0
cantTestPersona(6, C).			-> C = 3
cantTestPersona(3, C).			-> C = 2
-----------------------------------------------------------------------------

% noTesteados(F,L)
noTesteados(fecha(2020,6,21), L).		-> L = ['Romina', 'Fabian', 'Pablo']
noTesteados(fecha(2020,6,13), L).		-> L = ['Camila', 'Martin', 'Romina', 'Marcelo', 'Fabian', 'Belen', 'Pablo']
noTesteados(fecha(2020,6,14), L).  		-> L = ['Camila', 'Martin', 'Romina', 'Marcelo', 'Fabian', 'Pablo']
noTesteados(fecha(2019,8,21), L).		-> L = ['Diego', 'Camila', 'Mauro', 'Martin', 'Romina', 'Melina', 'Marcelo', 'Fabian', 'Belen', 'Pablo', 'Mariana']
noTesteados(fecha(2020,11,1), L).		-> L = ['Romina', 'Fabian', 'Pablo']
-----------------------------------------------------------------------------

% casosActivos(F,L)
casosActivos(fecha(2020,6,25), L).		-> L = ['Diego', 'Camila', 'Mauro', 'Martin']
casosActivos(fecha(2020,3,21), L).		-> L = []
casosActivos(fecha(2020,11,1), L).		-> L = ['Mauro', 'Belen']
casosActivos(fecha(2020,6,18), L).		-> L = ['Diego', 'Camila', 'Mauro', 'Martin', 'Melina']
-----------------------------------------------------------------------------

% testeados(F,L)
testeados(fecha(2020,6,15), L).		-> L = ['Melina', 'Diego', 'Mauro', 'Belen', 'Mariana']
testeados(fecha(2020,11,1), L).		-> L = ['Diego', 'Camila', 'Mauro', 'Martin', 'Melina', 'Marcelo', 'Belen', 'Mariana']
testeados(fecha(2020,3,1), L).		-> L = []
testeados(fecha(2020,6,7), L).		-> L = ['Melina', 'Mauro']
-----------------------------------------------------------------------------

% recuperados(F,L)
recuperados(fecha(2020,6,30), L).		-> L = ['Diego', 'Melina']
recuperados(fecha(2020,6,25), L).		-> L = ['Melina']
recuperados(fecha(2020,11,1), L).		-> L = ['Diego', 'Camila', 'Martin', 'Melina']
recuperados(fecha(2020,3,1), L).		-> L = []
-----------------------------------------------------------------------------

% periodoActivo(N,F1,F2)
periodoActivo(2,F1,F2).		-> F1 = fecha(2020, 6, 16), F2 = fecha(2020, 7, 1)
periodoActivo(4,F1,F2).		-> F1 = fecha(2020, 6, 18), F2 = fecha(2020, 7, 5)
periodoActivo(2,fecha(2020,6,16), fecha(2020,7,1)).			-> true  % Â¿El false del ejemplo no estÃ¡ mal? Se habla de la *primera* fecha
periodoActivo(5,F1,F2).		-> false
periodoActivo(9,F1,F2).		-> false
periodoActivo(1,F1,F2).		-> F1 = fecha(2020, 6, 12), F2 = fecha(2020, 6, 26)
-----------------------------------------------------------------------------

% expuestos(N,L)
expuestos(6, L).		-> L = ['Diego', 'Mauro', 'Fabian', 'Belen']
expuestos(10, L). 		-> false
expuestos(2, L).		-> L = ['Pablo']
expuestos(4,L). 		-> L = []
-----------------------------------------------------------------------------

% nexo(N1,N2,L).
nexo(6,2,L).	-> L = [['Melina', 'Mauro', 'Romina', 'Camila']]
nexo(2,6,L).	-> L = []
nexo(5,7,L).	-> L = [['Romina', 'Camila', 'Marcelo'], ['Romina', 'Camila', 'Martin', 'Marcelo']]
nexo(3,8,L).	-> L = [['Mauro', 'Melina', 'Fabian'], ['Mauro', 'Melina', 'Belen', 'Fabian']]
-----------------------------------------------------------------------------

% Auxiliares

miembro([1, 'Diego'], [[1, 'Diego'], [2, 'Camila']]).  -> true

miembro([1, 'Diego'], [[2, 'Camila']]). 		-> false

obtenerListaPositivos(fecha(2020, 11, 5), L, []).    -> L = [[1, 'Diego'], [2, 'Camila'], [3, 'Mauro'], [4, 'Martin'], [6, 'Melina'], [9, 'Belen']]

obtenerListaNegativos(fecha(2020, 11, 5), L, []).	-> L = [[1, 'Diego'], [2, 'Camila'], [3, 'Mauro'], [4, 'Martin'], [6, 'Melina'], [7, 'Marcelo'], [9, 'Belen'], [11, 'Mariana']]

obtenerListaTesteos(6, L, []). -> L = [fecha(2020, 6, 7), fecha(2020, 6, 21), fecha(2020, 6, 25)] 

concatenarSinRepetidos([[1, 'Diego'], [2, 'Camila']], [[3, 'Mauro'], [1, 'Diego']], L).   -> L = [[2, 'Camila'], [3, 'Mauro'], [1, 'Diego']]

testsNegativosAPartirDeFecha(4, fecha(2020,6,18), fecha(2020, 6, 25), L, []). 		-> L = []

menorFecha([fecha(2020,6,16), fecha(2020,7,1)], MF).  -> MF = fecha(2020, 6, 16)

nexoAux(6,2,6,fecha(1970,1,1), LAux).

nexoAux(6, 2, 5, fecha(2020,6,11), L).
-----------------------------------------------------------------------------

